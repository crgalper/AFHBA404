#!/bin/bash
# file PROJECTS/AFHBA404/scripts/llc-run-full-auto-two-076-079
# POST is number of samples in LLC control loop
# TLEN is the transient capture, overrun to make sure LLC terminates

# 7.5 secs at 1kHz
#POST=${POST:-7500}
# 7.5 secs at 10kHz
POST=${POST:-75000}
# 7.5 secs at 100kHz
# POST=${POST:-750000}
# 7.5 secs at 50kHz
#POST=${POST:-375000}
# 7.5 secs at 10kHz
#POST=${POST:-75000}

let TLEN="$POST*120/100"

UUT1=acq2106_076
UUT2=acq2106_079
# INBOX: acq2106_076, 6 x AI424
# OUTBOX: acq2106_079, 2 x AO424

echo llc-run-full-auto-two-076-079 UUT1=$UUT1 UUT2=$UUT2 POST=$POST TLEN=$TLEN
export LD_LIBRARY_PATH=/usr/local/mdsplus/lib64/
#export acq2106_076_path=/home/dt100/TREES/acq2106_076

# Settings valid for internal clock ZCLK + Si5326 PLL output at 10MHz
# 1kHz
# export EXTCLKDIV=${EXTCLKDIV:-10000}
# 10kHz
export EXTCLKDIV=${EXTCLKDIV:-1000}
# 20kHz
# export EXTCLKDIV=${EXTCLKDIV:-500}
# 50kHz
#export EXTCLKDIV=${EXTCLKDIV:-200} 
# 100kHz
# export EXTCLKDIV=${EXTCLKDIV:-100} 

# Settings valid for external clock LEMO
# 50kHz
#export EXTCLKDIV=${EXTCLKDIV:-20} 
# 100kHz
#export EXTCLKDIV=${EXTCLKDIV:-10} 


set_clocks_nohdmi() {
	(cd ~/PROJECTS/ACQ400/HAPI/acq400_hapi
#	 SITECLIENT_TRACE=1
	./user_apps/acq2106/acq2106_set_sync_role_nohdmi.py \
	--master_clk fp,1000000,1000000 --master_trg=soft --clkdiv=$EXTCLKDIV \
	$UUT1 $UUT2
	)
}

set_clocks_hdmi() {
	(cd ~/PROJECTS/ACQ400/HAPI/acq400_hapi
#	 SITECLIENT_TRACE=1
	./user_apps/acq2106/acq2106_set_sync_role.py \
	--master_clk fp,1000000,1000000 --master_trg=soft --clkdiv=$EXTCLKDIV \
	$UUT1 $UUT2
	)
}


#set_clocks_100kHz() {
#    (cd ~/PROJECTS/ACQ400/HAPI/acq400_hapi
##	 SITECLIENT_TRACE=1
#	./user_apps/acq2106/acq2106_set_sync_role.py \
#	--master_clk zclk,10000000,100 --master_trg=soft --clkdiv=$EXTCLKDIV \
#	$UUT1 $UUT2
#	)
#}

set_clocks() {
    (cd ~/PROJECTS/ACQ400/HAPI/acq400_hapi
#	 SITECLIENT_TRACE=1
	./user_apps/acq2106/acq2106_set_sync_role.py \
	--master_clk zclk,10000000,100 --master_trg=soft --clkdiv=$EXTCLKDIV \
	$UUT1 $UUT2
	)
}

control_program() {
	cd ~/PROJECTS/AFHBA404/LLCONTROL
	#echo CONTROL PROGRAM 01
#	export ZCOPY=1 
# DUP1: index from zero, 1 is CH02
	export DUP1=0
# skip this many shorts ie 192AI
	export FIRST_WRITE=192
# store this many longs (all of SPAD)
	export STORE_COLS="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
#	export STORE_COLS=:
# total SPAD 16 longs
	export NCOLS=16
# previously, we stored everything. This may have loaded the RT loop
#	export STORE_COLS="96,97,98,99"
#	export NCOLS=112
	export RTPRIO=40
	export AO_IDENT=1
    export DO32=1
# isolcpus=4,5,6,7,8...
# taskset 0x10 means "run on processor 4"
	export TASKSET="taskset 0x02"
# New variable to offset the PWM dataset in the VO Buffer
        export PWM_OFFSET=132
	[ "x$TASKSET" != "x" ] && echo TASKSET $TASKSET
	$TASKSET ./afhba-llcontrol-two-fiber $POST &
	echo wait for llcontrol, PID $CTRLPID
	wait
	echo CONTROL PROGRAM 99
        sleep 5
        echo "MDSput slice"
	mds_put_slice.py --ncols $NCOLS --dtype np.uint32 --store_cols $STORE_COLS \
		--tlatch_report=1 --node_name "CH%02d" --default_node ST \
		$UUT1 afhba.0.log
}


control_program_spc() {
	cd /home/dt100/eclipse-workspace/hic
	#echo CONTROL PROGRAM 01 SPC
#	export ZCOPY=1 
# DUP1: index from zero, 1 is CH02
	export DUP1=0
# skip this many shorts ie 192AI
	export FIRST_WRITE=192
# store this many longs (all of SPAD)
	export STORE_COLS="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
#	export STORE_COLS=:
# total SPAD 16 longs
	export NCOLS=16
# previously, we stored everything. This may have loaded the RT loop
#	export STORE_COLS="96,97,98,99"
#	export NCOLS=112
	export RTPRIO=80
	export AO_IDENT=1
# isolcpus=4,5,6,7,8...
# taskset 0x10 means "run on processor 4"
	export TASKSET="taskset 0x02"
	
	export THREAD1DS=1
	export THREAD2DS=10
	
	[ "x$TASKSET" != "x" ] && echo TASKSET $TASKSET
	$TASKSET ./run-llc-mthreaded $POST &
		
	echo LLCONTROL: entering wait for llcontrol
	wait
	echo LLCONTROL: wait for llcontrol completed
	
	echo CONTROL PROGRAM 99
	#/usr/local/mdsplus/bin/tdic /home/dt100/eclipse-workspace/hic/tdiscript1
}

control_script() {
       (cd ~/PROJECTS/ACQ400/HAPI/acq400_hapi/user_apps/acq400;
        STATUSMONITOR_TRACE=0 ./acq400_capture.py \
		--transient="PRE=0 POST=$TLEN SOFT_TRIGGER=1" \
		$UUT1
       )
}

control_script_original() {
       (cd ~/PROJECTS/AFHBA404/HAPI;
        echo CONTROL SCRIPT 01
       SITECLIENT_TRACE=1
       DOSITES="5,6" PWMSITES="6" python ./llc-test-harness-twobox.py $UUT1 $UUT2
        echo CONTROL SCRIPT 99
       )
       (cd ~/PROJECTS/ACQ400/HAPI/acq400_hapi/user_apps/acq400;
        STATUSMONITOR_TRACE=0 ./acq400_capture.py \
		--transient="PRE=0 POST=$TLEN SOFT_TRIGGER=1" \
		$UUT1
       )
}

control_program_marte()
{

       (cd ~/PROJECTS/AFHBA404/HAPI;
        echo CONTROL SCRIPT 01
       SITECLIENT_TRACE=1
       DOSITES="5,6" PWMSITES="6" python ./llc-test-harness-twobox.py $UUT1 $UUT2
        echo CONTROL SCRIPT 99
       )

	#taskset 0x01 /home/dt100/MARTe2-examples/MARTeApp.sh -l RealTimeLoader -f /home/dt100/MARTe2-examples/Configurations/AFHBATester5.cfg  -s State1	
	#taskset 0x01 /home/dt100/MARTe2-examples/MARTeApp.sh -l RealTimeLoader -f /home/dt100/MARTe2-examples/Configurations/AFHBATester6.cfg  -s Run	
	#taskset 0x01 /home/dt100/MARTe2-examples/MARTeApp.sh -l RealTimeLoader -f /home/dt100/MARTe2-examples/Configurations/AFHBATester6-sm.cfg  	
	taskset 0x01 /home/dt100/MARTe2-examples/MARTeApp.sh -l SPCRealTimeLoader -f /home/dt100/MARTe2-examples/Configurations/AFHBA404-expcode1005-full-tester-sm.cfg   -m ShotManager:Start
}

pwm_control() {
    cd ~/PROJECTS/AFHBA404/LLCONTROL/
    # Inserts PWM control data into the host buffer.
    # Set all channels to 0.
    #PWM_OFFSET=132 DEVNUM=1 IBUF=0 ./pwm_set_channel 0 0
    # Set first channel for test.
    export CH_NUM=0 # 0 is all channels.
    export INITIAL_STATE=1
    export GROUP_PERIOD=1000
    export ICOUNT=250
    export OCOUNT=750
    PWM_OFFSET=132 DEVNUM=1 IBUF=0 ./pwm_set_channel $CH_NUM $INITIAL_STATE $GROUP_PERIOD $ICOUNT $OCOUNT
    cd ~
}


case "x$1" in
xset_clocks)
	set_clocks;;
xcontrol_program)
	#control_program_spc;; 
	control_program;; 
xcontrol_script)
	control_script;;
xsetup_shot)
	set_clocks
    	pwm_control
	#new_shot --verbose 1 $UUT1
	#sudo $0 control_program &
	control_program_marte 
	;;
xlaunch_shot)
	control_script
	echo MAIN: entering wait for control script
	wait 
	echo MAIN: wait for control script completed
	#$0 test_tdi <-- this olny if SPC version of LLC program is used
	(cd ~/PROJECTS/AFHBA404; sudo ./scripts/get_latstats)	
	;;
xpwm_control)
	pwm_control;;
xtest_tdi)
	/usr/local/mdsplus/bin/tdic /home/dt100/eclipse-workspace/hic/tdiscript1;;
*)
	set_clocks
    pwm_control
	new_shot --verbose 1 $UUT1
	#sudo $0 control_program &
	$0 control_program &

	sleep 5
	
	control_script
	echo MAIN: entering wait for control script
	wait 
	echo MAIN: wait for control script completed
	#$0 test_tdi <-- this olny if SPC version of LLC program is used
	(cd ~/PROJECTS/AFHBA404; sudo ./scripts/get_latstats)

        #echo Waiting 2 minutes ...
	#sleep 120

	;;
esac
